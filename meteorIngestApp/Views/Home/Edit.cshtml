@model skyImageWS.SkyImage

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    * {
    box-sizing: border-box;
}

.img-magnifier-container {
    position: relative;
}

.img-magnifier-glass {
    position: absolute;
    border: 3px solid #000;
    border-radius: 50%;
    cursor: none;
    /*Set the size of the magnifier glass:*/
    width: 300px;
    height: 300px;
}

</style>


<hr />
<img id="myImage" src="data:image/png;base64,@Html.DisplayFor(model => model.ImageData.ImageData1)"  width="0" height="0"/>

<div class="row">
    <div class="col-md-4">
        @Html.ActionLink("Prev", "Prev", new { rank = Model.Rank, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = ViewData["CurrentPage"] })

    </div>
    <div class="col-md-4">
        @Html.ActionLink("Next", "Next", new { rank = Model.Rank, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = ViewData["CurrentPage"] })
    </div>
</div>
<form asp-action="Save">
    <div class="row">
        <div class="col-md-4">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
        <div class="col-md-2">
            @Html.ActionLink("Delete", "Delete", new { id = Model.SkyImageId, rank = Model.Rank, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = ViewData["CurrentPage"] })
        </div>
        <div class="col-md-2">
            @Html.ActionLink("DeleteImageSet", "DeleteImageSet", new { id = Model.ImageSet, rank = Model.Rank, sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = ViewData["CurrentPage"] })
        </div>
    </div>
     <div class="form-group form-check">
        <label class="form-check-label">
            <input class="form-check-input" asp-for="SelectedForTraining" /> @Html.DisplayNameFor(model => model.SelectedForTraining)
        </label>
    </div>
    
     <div>
         <div class="img-magnifier-container">
             <svg id="SVG1" width="100%" height="100%" viewBox="0 0 @Model.Width @Model.Height">

                 <image id="myImage2" href="data:image/png;base64,@Html.DisplayFor(model => model.ImageData.ImageData1)"  width="100%" height="100%" />
                 @foreach (var skyThing in Model.DetectedObjects)
                 {
                     <rect x="@(skyThing.Bbox.Xmin)" y="@skyThing.Bbox.Ymin" width="@(skyThing.Bbox.Xmax-skyThing.Bbox.Xmin)" height="@(skyThing.Bbox.Ymax-skyThing.Bbox.Ymin)" style="stroke:pink;fill-opacity:0;stroke-width:2">
                     </rect>
                     @: <text x="@(skyThing.Bbox.Xmin)" y="@(skyThing.Bbox.Ymin-20)" style="stroke:red">@skyThing.SkyObjectClass&nbsp; @(Math.Round(skyThing.Score * 100))% </text>
                 }

             </svg>

         </div>





         <div class="row">

             <div class="row">
                 <div class="col-md-4">

                     <div class="form-group">
                         <input id="CurrentPage" type="hidden" value="@ViewData["CurrentPage"]" />
                     </div>
                     <div asp-validation-summary="ModelOnly" class="text-danger"></div>


                     <table cols="2" width="1000">
                         <tr>
                             <td>
                                 <div class="form-group">
                                     <label asp-for="SkyImageId" class="control-label"></label>
                                     <input asp-for="SkyImageId" class="form-control" />
                                     <span asp-validation-for="SkyImageId" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Filename" class="control-label"></label>
                                     <input asp-for="Filename" class="form-control" />
                                     <span asp-validation-for="Filename" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Camera" class="control-label"></label>
                                     <input asp-for="Camera" class="form-control" />
                                     <span asp-validation-for="Camera" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Width" class="control-label"></label>
                                     <input asp-for="Width" class="form-control" />
                                     <span asp-validation-for="Width" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Height" class="control-label"></label>
                                     <input asp-for="Height" class="form-control" />
                                     <span asp-validation-for="Height" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Date" class="control-label"></label>
                                     <input asp-for="Date" class="form-control" />
                                     <span asp-validation-for="Date" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="ImageSet" class="control-label"></label>
                                     <input asp-for="ImageSet" class="form-control" />
                                     <span asp-validation-for="ImageSet" class="text-danger"></span>
                                 </div>
                                 <div class="form-group">
                                     <label asp-for="Rank" class="control-label"></label>
                                     <input asp-for="Rank" class="form-control" />
                                     <span asp-validation-for="Rank" class="text-danger"></span>
                                 </div>
                             </td>
                             <td width="500" align="center">
                                 @foreach (var skyThing in Model.DetectedObjects)

                                 {
                                     @:
                                     <div class="align-self-sm-center">
                                         <label>class:</label>
                                         <label>@skyThing.SkyObjectClass:@((skyThing.Score * 100).ToString("00"))%  </label><br />



                                     </div>

                                 }




                             </td>
                         </tr>
                     </table>


</form>
</div>
		
<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    function magnify(imgID,svgID, zoom) {
        
        var img, svg, glass, w, h, bw,z;
        z = zoom;
        img = document.getElementById(imgID);
        svg = document.getElementById(svgID);

        /* Create magnifier glass: */
        glass = document.createElement("DIV");
        glass.setAttribute("class", "img-magnifier-glass");

        /* Insert magnifier glass: */
        svg.parentElement.insertBefore(glass, svg);
        
        /* Set background properties for the magnifier glass: */
        glass.style.backgroundImage= "url('" + img.src + "')";

        
        glass.style.backgroundRepeat = "no-repeat";
        glass.style.backgroundSize = (@Model.Width * zoom) + "px " + (@Model.Height * zoom) + "px";
       
        bw = 0;//borderwidth
        w = glass.offsetWidth / 2; //?
        h = glass.offsetHeight / 2;

        /* Execute a function when someone moves the magnifier glass over the image: */
        glass.addEventListener("mousemove", moveMagnifier);
        svg.addEventListener("mousemove", moveMagnifier);

        /*and also for touch screens:*/
        //glass.addEventListener("touchmove", moveMagnifier);
        //svg.addEventListener("touchmove", moveMagnifier);
       
 

    function moveMagnifier(e) {
        var pos, x, y, scaleX, scaleY, bBox, w, h;

        w = glass.offsetWidth / 2; //?
        h = glass.offsetHeight / 2;
        /* Prevent any other actions that may occur when moving over the image */
       // e.preventDefault();
    /* Get the cursor's x and y positions: */
        bBox = img.getBoundingClientRect();
        //alert(bBox.width);
        pos = getCursorPos(e);
       
        //alert(svg.getBoundingClientRect().width);

        x = pos.x;
        y = pos.y;
        scaleX = svg.getBoundingClientRect().width / svg.getBBox().width;
        scaleY = svg.getBoundingClientRect().height / svg.getBBox().height;
        /* Prevent the magnifier glass from being positioned outside the image: */
        //if (x > bBox.offsetWidth) { x = bBox.offsetWidth; }
        if (x < 0) { x = 0 ; }
        //if (y > bBox.height-h/zoom  ) { y = bBox.height-h/zoom  ; }
        if (y < 0 ) { y = 0; }
        /* Set the position of the magnifier glass: */
        glass.style.left = (x - w) + "px";
        glass.style.top = (y - h) + "px";
    /* Display what the magnifier glass "sees": */
        var xpos, ypos;

        xpos = x * zoom / scaleX;
        ypos = y * zoom / scaleY;
        xpos = xpos - w;
        ypos = ypos - h;
        glass.style.backgroundPosition = "-" + xpos+ "px -" + ypos +"px";
       //glass.style.backgroundPosition = w   + "px " + h +"px";
       
    }

    function getCursorPos(e) {
        var a, x = 0, y = 0;
       
        e = e || window.event;
        
    /* Get the x and y positions of the image: */
       
        a = svg.getBoundingClientRect();
        
        /* Calculate the cursor's x and y coordinates, relative to the image: */
        x = e.pageX - a.left;
        y = e.pageY - a.top;
        /* Consider any page scrolling: */
        x = x - window.pageXOffset;
        y = y - window.pageYOffset;
        return { x: x, y: y };
    }
           }
    //function normalizeImage() {


    //    var canvas = document.getElementById('myImage'); //the canvas object

    //}

    window.onload =  magnify("myImage","SVG1",3);

</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
